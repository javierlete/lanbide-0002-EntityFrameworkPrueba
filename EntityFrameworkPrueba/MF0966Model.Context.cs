//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFrameworkPrueba
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class mf0966Entities : DbContext
    {
        public mf0966Entities()
            : base("name=mf0966Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Producto> Productos { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<ProductosCompleto> ProductosCompletos { get; set; }
    
        public virtual ObjectResult<BuscarPorEmail_Result> BuscarPorEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarPorEmail_Result>("BuscarPorEmail", emailParameter);
        }
    
        public virtual int ProductosBorrar(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductosBorrar", idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> ProductosInsertar(string nombre, Nullable<decimal> precio, Nullable<long> categoriaId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var categoriaIdParameter = categoriaId.HasValue ?
                new ObjectParameter("CategoriaId", categoriaId) :
                new ObjectParameter("CategoriaId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("ProductosInsertar", nombreParameter, precioParameter, categoriaIdParameter);
        }
    
        public virtual int ProductosModificar(Nullable<long> id, string nombre, Nullable<decimal> precio, Nullable<long> categoriaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var categoriaIdParameter = categoriaId.HasValue ?
                new ObjectParameter("CategoriaId", categoriaId) :
                new ObjectParameter("CategoriaId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductosModificar", idParameter, nombreParameter, precioParameter, categoriaIdParameter);
        }
    
        public virtual ObjectResult<ProductosObtenerPorId_Result> ProductosObtenerPorId(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductosObtenerPorId_Result>("ProductosObtenerPorId", idParameter);
        }
    
        public virtual ObjectResult<ProductosObtenerTodos_Result> ProductosObtenerTodos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductosObtenerTodos_Result>("ProductosObtenerTodos");
        }
    
        public virtual ObjectResult<Prueba_Result> Prueba(Nullable<int> uno, Nullable<int> dos)
        {
            var unoParameter = uno.HasValue ?
                new ObjectParameter("Uno", uno) :
                new ObjectParameter("Uno", typeof(int));
    
            var dosParameter = dos.HasValue ?
                new ObjectParameter("Dos", dos) :
                new ObjectParameter("Dos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prueba_Result>("Prueba", unoParameter, dosParameter);
        }
    }
}
